function hdl_figure = plot_route( self )
% methode plot_route de la classe oceano
% trace la route 

% $Id: plot_route.m 187 2012-09-12 13:09:40Z jgrelet $

root = get(0, 'UserData' );

markersize = root.markersize;
markertype = root.markertype;

%% met en place les controls
% le tag plot_route est commun a tous les objets
hdl_figure = findobj( 'Tag', 'plot_route' );
if( isempty(hdl_figure) )
  hdl_figure = figure( 'Name','Route oceano',...
    'numbertitle', 'off', ...
    'HandleVisibility','on',...
    'Position',[350 200 750 750],...
    'Tag','plot_route',...
    'MenuBar','figure',...
    'Color', get( 0, 'DefaultUIControlBackgroundColor' ));
  
  % Create axes
  axe = axes(...
    'Units','pixels',...
    'Position',[60 150 500 500],...
    'Tag', 'axe_route',...
    'Box','on');
  
  % affichage des coordonnees de la sourie (ButtonMotion)
  uicontrol( hdl_figure, 'style','Edit',...
    'HorizontalAlignment','left',...
    'tag','tag_but1',...
    'position',[20 70 120 20] );
  uicontrol( hdl_figure, 'style','Edit',...
    'HorizontalAlignment','left',...
    'tag','tag_but2',...
    'position',[20 40 80 20] );
  uicontrol( hdl_figure, 'style','Edit',...
    'HorizontalAlignment','left',...
    'tag','tag_but3',...
    'position',[20 10 80 20] );

  % affichage des coordonnees de la sourie (ButtonMotion)
  uicontrol( hdl_figure, 'style','Edit',...
    'HorizontalAlignment','left',...
    'tag','tag_but4',...
    'position',[150 70 120 20] );
  uicontrol( hdl_figure, 'style','Edit',...
    'HorizontalAlignment','left',...
    'tag','tag_but5',...
    'position',[150 40 80 20] );
  uicontrol( hdl_figure, 'style','Edit',...
    'HorizontalAlignment','left',...
    'tag','tag_but6',...
    'position',[150 10 80 20] );
    
  %% Frame (Run/Next/Last & Reset  button)
  hdl_profil = uipanel('Title','Profils',...
    'FontSize',8,...
    'Units','pixels',...
    'Position',[595 10 100 142]);  
  % Run plot profiles
  uicontrol(...
    'Parent',hdl_profil,...
    'Style','pushbutton',...
    'Position',[5 98 90 30],...
    'String','Run',...
    'Visible', self.visible,...
    'Tag', 'tag_button_run',...
    'Callback', 'getButtonRunCallback' );
  % Next profile
  uicontrol(...
    'Parent',hdl_profil,...
    'Style','pushbutton',...
    'Position',[5 66 90 30],...
    'String','Next',...
    'Visible', self.visible,...
    'Callback', 'getButtonNextCallback');
  % Last profile
  uicontrol(...
    'Parent',hdl_profil,...
    'Style','pushbutton',...
    'Position',[5 34 90 30],...
    'String','Last',...
    'Visible', self.visible,...
    'Callback', 'getButtonLastCallback' );
  % Clear profile
  uicontrol(...
    'Parent',hdl_profil,...
    'Style','pushbutton',...
    'Position',[5 2 90 30],...
    'String','Reset fig.',...
    'Visible', self.visible,...
    'Callback', 'getButtonResetCallback');

  % affichage du popup MarkerSize
  uicontrol( ...
    'Style','text',...
    'Position',[300 30 70 20],...
    'ForegroundColor','k',...
    'String','MarkerSize',...
    'HorizontalAlignment','right');
  uicontrol( ...
    'Style','popupmenu',...
    'Position',[300 10 70 20], ...
    'String',root.markersize_lbl,...
    'BackgroundColor','w',...
    'Value',root.markersize_value,...
    'Tag', 'popup_markersize', ...
    'CallBack', 'select_markersize_callback');
  
  % affichage du popup MarkerType
  uicontrol( ...
    'Style','text',...
    'Position',[300 75 70 20],...
    'ForegroundColor','k',...
    'String','MarkerType',...
    'HorizontalAlignment','right');
  uicontrol( ...
    'Style','popupmenu',...
    'Position',[300 55 70 20], ...
    'String',root.markertype_lbl,...
    'BackgroundColor','w',...
    'Value',root.markertype_value,...
    'Tag', 'popup_markertype', ...
    'CallBack', 'select_markertype_callback');
  
else
  figure(hdl_figure);
  % reset(gca);
  % reset(axe);
  cla reset;
  set(gca,'tag','axe_route');
end

%% titre sur plusieurs lignes 
% title({'First line';'Second line'})
title( { [ char(get(data_0d(self),'CYCLE_MESURE')), '  ', ...
           char(get(data_0d(self),'PLATEFORME')), ' / ', ...
           char(get(data_0d(self),'INSTITUT')) ];...
           char(get(data_0d(self),'INSTRUMENT')) });

%% selectionne X et Y
try
  switch root.route_value
    case 1  % X=LONX Y=LATX
      X = get(self.data_1d,'LONX'); Y = get(self.data_1d,'LATX');  
      xlabel('Longitude'); ylabel('Latitude');
    case 2  % X=DAYD Y=LATX;
      X = get(self.data_1d,'DAYD'); Y = get(self.data_1d,'LATX');  
      xlabel('Jour julien'); ylabel('Latitude');
    case 3  % X=DAYD Y=LONX;
      X = get(self.data_1d,'DAYD'); Y = get(self.data_1d,'LONX'); 
      xlabel('Jour julien'); ylabel('Longitude');
  end
catch
  warn ('profil', 'plot_route', 'load datafile first') ;
  delete(hdl_figure);
  return
end
interlx = 2;   % valeur de l'intervalle entre les labels X
interly = 2;   % valeur de l'intervalle entre les labels Y
intervx = 1;   % valeur de l'intervalle entre les tickmark X
intervy = 1;   % valeur de l'intervalle entre les tickmark Y
ymin = floor(min( Y ))-2;
ymax = ceil( max( Y ))+2;
xmin = floor(min( X ))-2;
xmax = ceil( max( X ))+2;
limx   = [xmin xmax];
limy   = [ymin ymax];

%% trace la route en fonction du fdc
switch root.route_value
  case 1
    if length( limx(1):interlx:limx(2)) > 9
      interlx = 4;
    end
    if length( limy(1):interly:limy(2)) > 9
      interly = 4;
    end
    [tickx, labelx] = tickgeo( limx(1), limx(2), intervx, limx(1), interlx, 1);
    [ticky, labely] = tickgeo( limy(1), limy(2), intervy, limy(1), interly, 0);
    
    switch root.map_value
      case 1   % none
        hdl_line_route = line( X, Y, 'Color', 'r', 'Marker', markertype,...
                              'MarkerSize', markersize,'Tag','TagRoute',...
                              'LineStyle', 'none');
        set( gca, 'YLim', limy, 'YTick', ticky, 'YtickLabel', labely,...
             'XLim', limx, 'Xtick', tickx, 'XtickLabel', labelx,...
             'Box', 'on', 'fontSize', [10],...
             'DataAspectRatio', [1 1 1], 'DataAspectRatioMode', 'manual');
        
      case 2   % m_map
        proj = 'Equidistant Cylindrical';
        %proj = 'mercator';
        %plot_m_map( ymin-5, ymax+5, xmin-5, xmax+5, proj );
        m_proj(proj, 'lat', [ymin ymax], 'long',[xmin xmax]);
        
        % Contour de cote detaille
        % ------------------------
        m_gshhs_i('patch',[.7 .7 .7]);
        % m_coast('patch',[0.9 0.9 0.9]);
        m_grid;
        hold on;
        hdl_line_route = m_line( X, Y, 'Color', 'r', 'Marker', markertype,...
                                'MarkerSize', markersize, 'LineStyle', 'none');
        %hidem(gca);
        
      case 3   % map toolbox
        hw = worldmap([ymin-5 ymax+5],[xmin-5 xmax+5]); 
        land = shaperead('landareas', 'UseGeoCoords', true);
        geoshow(hw, land, 'FaceColor', [1 1 0.7]);      % terre jaune pale
        setm(gca,'FFaceColor',[0.7 0.9 1]);             % mer bleue
%       obsolete
%         hw = worldmap([ymin-5 ymax+5],[xmin-5 xmax+5],'patch');
%         % pour une carte plus detaillee, mieux pour zoomer
%         % mais tres tres long!
%         %worldmap('hi',[ymin ymax],[lonmin lonmax],'patch')
%         set(handlem('allpatch'),'Facecolor',[1 1 0.7]); % terre jaune pale
%         setm(gca,'FFaceColor',[0.7 0.9 1]); % mer bleue
        %pour avoir une carte rectangle
        %setm(gca,'FFaceColor',[0.7 0.9 1],'MapParallels',1)
        % on inverse les axes pour plotm
        hdl_line_route = linem( Y, X, 'Color', 'r', 'Marker', markertype,...
                                'MarkerSize', markersize , 'LineStyle','none');
        %hidem(gca);
    end
    
  case {2,3}  % pour DAYD = f(LATX) ou f(LONX)
    if length( xmin:interlx:xmax) > 9
      interlx = 5;
    end
    if length( limy(1):interly:limy(2)) > 9
      interly = 4;
    end
    [tickx, labelx] = ticktemps( limx(1), limx(2), intervx, limx(1), interlx);
		if root.route_value == 2
      [ticky, labely] = tickgeo( limy(1), limy(2), intervy, limy(1), interly, 0);
		else
      [ticky, labely] = tickgeo( limy(1), limy(2), intervy, limy(1), interly, 1);
		end
    hdl_line_route = line( X, Y, 'Color', 'r', 'Marker', markertype, 'MarkerSize',... 
                           markersize, 'LineStyle','none');
    set(gca, 'YLim', limy, 'YTick', ticky, 'YtickLabel', labely,...
             'XLim', limx, 'Xtick', tickx, 'XtickLabel', labelx,...
             'Box', 'on', 'fontSize', [10],...
             'DataAspectRatio', [1 1 1], 'DataAspectRatioMode', 'manual');
end

% on va stocker les valeurs limx et limy dans les chanps UserData
% de button 2 (Lat) et 3 (lon)
set( findobj( 'Tag', 'tag_but2' ), 'UserData', limx );
set( findobj( 'Tag', 'tag_but3' ), 'UserData', limy );

%% met en place les gestionnaires de sourie sur la zone de travail               
set( hdl_figure, 'WindowButtonMotionFcn',...
                 'getButtonMotionCallback' );
% sur la route + click uniquement 
set( hdl_line_route, 'tag', 'line_route',...
                     'ButtonDownFcn', 'getButtonDownCallback');